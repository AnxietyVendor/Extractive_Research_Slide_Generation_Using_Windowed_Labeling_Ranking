Usage of weak passwords for authentication within an organization can be exploited during cyberattacks leading to unauthorized account access, denial of service, data and identity theft, sabotage etc.
Such attacks could bring financial and reputational losses apart from legal consequences.
Organizational password policies came into being in an attempt to encourage users to create more complex and diverse passwords.
However, it has been observed that people show similar behavior in adopting those policies and end up creating passwords with similar patterns.
Security training has been found to be a popular mechanism in an enterprise setting, of which, game-based trainings have shown positive impact with an added advantage of being immersive.
In this paper, we present a serious game-based training on creating password security awareness among enterprise users.
The training involves promoting understanding among users about various common password heuristics during password creation.
This study focuses on two research questions: 1) Can a game-based password awareness training teach participants about the various password heuristics?
2) Can such a training improve the organizational password diversity?
With a participation of 4,906 employees from our enterprise in the study, we were able to observe effects of game-based training on password awareness.
We also found insights during the study to show that users created diverse passwords.
Despite advancements in user authentication methods, the decades old system of username-password combination is still prevalent [54,57].
Even the method of two-factor authentication generally consists of passwords as one of its factors [3,40].
The human element involved in password creation is one of the major factors affecting password strength [35].
Studies show that people are more likely to use weaker and easily memorable passwords because of the lack of knowledge in creating stronger passwords [20] or due to the limitations in memorizing passwords [56].
This makes it easier for attackers to crack the passwords, resulting in security breaches and loss of personal and confidential information.
Organizations have had their fair share of difficulties in dealing with password breaches [12,30,45,46].
In an enterprise scenario, attackers often target individuals to steal passwords and gain access to organizational data [6].
Verizon's Data Breach Investigation Report (DBIR) [52] states that 63% of data breaches worldwide happened due to weak or stolen passwords or usage of default passwords.
Organizational password policies such as setting a password expiration period could also lead to adoption of insecure methods like writing down the passwords [19] or using newer passwords with minimal difference from the old ones.
For example, appending symbols and/or digits at the end [37] could result in weak and similar passwords.
These fall under insecure password practices and avoiding them will help create better passwords.Password meters are found to be useful in creating stronger passwords [51].
However, most of them provide basic feedback [13,51] and many of them also rate passwords inconsistently [39].
There is a need to create awareness among users when it comes to creating better passwords.
An advanced data-driven password meter by Ur, et al. [48] that uses several heuristics to score passwords showed compelling results, but with limitations.organization by following a game-based password awareness methodology.
We utilized the heuristics from the previous study [48] to create a comprehensive training method in order to teach password practices.
Heuristics, in the context of this study, denote the techniques or practices that have to be satisfied to improve the overall password strength.
For example, a heuristic like "Not more than three consecutive repeating characters" will be satisfied if the created password does not have more than three consecutive repeating characters.
We conducted the gamebased experiment as a part of our organization's annual information security awareness week.
The online 2D web game titled Passworld focuses on enterprise password training, with little compromise on the fun element of gameplay.
This paper details the experiment, results, and observations obtained from our study.
There are several previous studies relating to user behaviors, tools for password security, and game-based cybersecurity awareness training.
When it comes to user behavior, studies [2,50] show that users assess various cybersecurity threats by themselves and their assessment often ends up being inaccurate, mainly because they are not knowledgeable in this regard.
The usage of multiple online accounts leads to password reuse [2].
This, combined with insecure creation practices, make passwords all the more vulnerable.
The users' cognitive ability to simultaneously deal with multiple passwords is limited [23].
A recent study on users' perceptions on password strength [50] shows that many users' idea of strong passwords, like adding digits and symbols at certain positions, is exploited by today's password cracking tools.
Another study [49] shows that even with the awareness about importance of creating strong passwords, many users create passwords that are easy to guess.
While many users did not know how to create strong passwords, many believed that they were creating strong passwords, but in fact, those passwords were just predictable [49].
As per Habib et al. [20], in workplaces with a password expiration policy, many users tend to use password creation strategies that are very predictable and with minimal modifications.
A study with adaptive password blacklisting policies [38] was found to have good results.
However, the study also advises using a good password-composition policy to augment the structure-based adaptive, blacklist system.
Certain tools exist to help users create better passwords.
Proactive password checking is a method of checking a user's password to see if it satisfies certain criteria to consider it as secure [23,56].
Password strength meters implement this by checking several criteria for testing the strength of a password.
A recent study with a data driven password meter [48] showed positive results, which were attributed to the feedback mechanism implemented into the tool.
However, the study also concluded that the overall effect of the meter was not strong and some participants did not trust suggestions from a computer.
Studies on users' perceptions on password systems and behaviors [2,55,57] have recommended the need to provide training and instructions on constructing usable and secure passwords, and to provide adequate feedback during training to enhance their knowledge.
A report by security firm LastPass in 2018 [24] revealed that only 19% of users create strong passwords at work and 62% of users use the same passwords for work and personal accounts.
It implies that knowing an employee's personal password makes it easier for hackers to guess their work password [24].
This suggests the importance of making enterprise users aware of the various password heuristics that could help them create secure passwords for both personal and work accounts.
Many enterprise-training methods like educational documents, mail-based embedded training [29] etc. are available.
However, these are considered passive training methods that are found to be less engaging and monotonous [10].
On the contrary, interactive games facilitate participation between the teaching agent and learner [32,53].
Games with a purpose, titled serious games, perform an additional task of creating awareness apart from entertainment [5].
Serious games have been used to spread cybersecurity awareness with successful results.
Previous studies with games like Anti Phishing Phil [41], CyberCIEGE [44], Phishy [8], GAP [47], Cyberaware [18], PASDJO [39], and Control-Alt-Hack [14] have shown that games are not only effective in training cybersecurity concepts, but are also more engaging, compared to the traditional methods like reading documents.
Considering the existing password awareness games, PASDJO [39] trains users on measuring the strengths of on-screen passwords through the method of inspection.
GAP [47] focuses on training users on predictable positions of uppercase letters, digits, and symbols.
While these game-based studies provided good results in terms of user's understanding when it came to insecure password practices, they focused on a very small set of password heuristics.
We tried to extend this study to a larger audience.
We followed a game-based approach for password training that focused on a set of 16 password heuristics.
To bring the game more in line with the latest findings and studies, we used the results from the study by Ur, et al. [48] and a set of password recommendations from a study by Vu, et al. on improving password security and memorability [54].
These were analyzed in light of the organizational password complexity requirements, and were organized to form a set of heuristics to be taught through the game.
The tool used in a previous study [38], suggests modifications to passwords entered by users in order to make them compliant with policies.
Our intent was to test the user understanding by letting them apply their learnings about the heuristics, to their passwords without any additional suggestions on modifications to the entered password.
The reports from our organization's Corporate Security Team (CST), which takes care of awareness training, suggested from their data that employees participate in mandatory training modules because of the condition that they must finish it.
This condition could provide a sense of urgency to complete, rather than understand the course content with a curiosity to learn.
So, as suggested by CST, we decided on a non-mandatory, gamified way of training to create awareness about passwords among participants.
The training was conducted in collaboration with CST, which also took care of all the clearances and ethics review.
The game was made part of the normal workday.
We developed an online, web-based game to spread awareness about various password heuristics among the employees of our organization.
Our unique game titled "Passworld" follows certain basic principles to ensure that an optimal learning outcome is obtained.
We followed a set of established theories and principles during the design phase of our game.Experiential Gaming Model: Games have been shown to be most successful and engaging when they provide a flow experience [11] to players [26].
An optimal flow experience, combined with experiential learning and feedback, termed as the Experiential Gaming model, is found to maximize the impact of a training game [26].
Passworld tries to incorporate a similar learn and reflect methodology with emphasis on immersion and enjoyment by providing learning tips, timely feedback, and an easy-to-learn interface, similar to the ones in the classic and widely famous games of the 80s and 90s like Super Mario Bros. [34] and Adventure Island [21].
The game also follows all the six levels of Bloom's Taxonomy in the cognitive domain [27,42] to maximize the learning outcome.
The game instructions, learning tips, and basic information on password heuristics form the first level Knowledge in the Bloom's hierarchy.
The game presents these learning materials in a fun and entertaining way to help with Comprehension.
Players have to apply this knowledge while creating passwords, which satisfies Application level in the hierarchy.
Further, players Analyze each password heuristic and Synthesize their own knowledge by adding up pieces of information obtained from the game levels.
The instant and delayed feedback in the game helps them to Evaluate their choices, thereby helping in reflection, a learning science principle [15].
Passworld also follows the Conceptual-Procedural gaming principle [41] to ensure a better learning outcome.
This principle states that conceptual and procedural knowledge augments one another in an iterative process [25].
This, along with game design patterns like integration pattern, cognition pattern, and presentation pattern [5], helped us decide a flow and overall design for the game.
We also ensured that the Six "I" Framework of Serious Game Design [4] that focuses on Identity, Immersion, Interactivity, Increased Complexity, Informed Teaching, and Instructional Content, is followed.
Passworld is a 2D, single-player, horizontal scrolling platformer game [9] falling in the Action-Adventure [33] genre, developed in the Unity3D game engine.
We tried to keep the game as lightweight as possible for compatibility with all the browser versions and machines.
We decided on providing a positive gameplay experience by intertwining password awareness with a platformerbased game, where both intrinsic motivation of fun element of gameplay as well as extrinsic motivation like rewards and benefits merge [17].
Passworld was made to have a gameplay experience similar to that of certain classic games [21,34] to create a positive mindset in players, through a feeling of nostalgia [7].
We chose a horizontal, jungle-based platformer game considering the nonmonotonous gameplay factor, game time, interactions and visuals, and the analogy that reflects real-life scenario of password attacks.
We tried to relate the real world to our game through the following design choices:Open-interconnected world: The real cyber world is always open and interconnected.
The chances of cyberattacks and password breaches are high, if we do not follow proper security measures.
We wanted to create a similar scenario within the game.
Therefore, we chose a jungle environment, which is a wide-open scenario.
If the user is not careful, the chances of being attacked by animals are much higher.
Digital assets need protection where passwords play an important role.
Similarly, the game focuses on storing important ancient artifacts using secure gates.
Know thy enemy: In order to create secure passwords, one must know the weaknesses of passwords that are exploited by attackers.
This is where the game introduces various animals.
The animals in the game provide tips about several password heuristics.
They also check the user created passwords to see if heuristics are satisfied, and if not, they attack.
We used the password heuristics from a previous study [48].
While [48] was based on using the heuristics to check and analyze user created passwords, and provide suggestions for improvement, we used the heuristics to teach users about individual password requirements.
Prepare to defend: In real life, we can create passwords using all available character classes.
We converted this into a game resource, where players have to gather the different character classes to create their passwords (gates).
The resources are the raw materials used to create the gates, just like L, U, D, and S character classes are used to create a password.
Typical enterprise password policies mandate usage of all character classes while creating passwords.
Build a strong defense: Passworld teaches users about password heuristics and requires them to apply their learnings to create strong and memorable passwords that satisfy all the heuristics.
The game storyline is based in a fictional world.
Learning experiences have found to be enhanced using story-based agents [41].
The gameplay of a level starts with a pre-test, then the game, followed by a post-test.
The game consists of two levels, Level 1 and Level 2, and each level consists of different sequential stages for pre-test, gameplay, password creation, distraction task, password recall, and post-test (cf. Figure 1).
Based on our design choices, we framed our game story and various gameplay elements, as follows:Jungle environment: The protagonist, Soma, is an archaeologist who is in search of two ancient artifacts that were lost years ago in a land called "Passworld".
Soma has to travel two days and two nights through the jungles of Passworld to find them (cf. Figure 2).
The two days are represented by Level 1 and Level 2 gameplays.
Securely storing the artifact: Since the ancient artifacts are precious, Soma has to store them after collecting, to protect them from being stolen.
This is done by creating strong gates (analogous to secure passwords) around Soma's camp.
This happens in the two password creation stages (cf. Figure 4), represented by two nights.
Learning the password heuristics: In the two main levels, the players can interact with oncoming animals during gameplay to learn about various password heuristics (cf. Figure 3).
Every oncoming animal will raise the curiosity of the player by showing basic heuristic details as a riddle (E.g. Fox in.
Figure 2).
The player can choose to "know more" about a particular heuristic by clicking the animal's heuristic text.
This will pop up a detailed description of the heuristic and certain statistics associated with it (cf. Figure 3).
If these heuristics are not satisfied during each password creation stage, the corresponding animal will attack the password gate (cf. Figure 5), and enter the camp.
This also signifies how a password meter checks for various heuristics [48].
While in [48], the users are not required to satisfy all the password heuristics in an entered password, our game has this requirement as we wanted to teach all the available heuristics to the users and tell them that every single one of them is important.
Resource gathering: The resources for creating these gates are obtained throughout the journey, in the form of tablets with character classes mentioned as L, U, D, and S (Lowercase, Uppercase characters, Digits, and Symbols) (cf. Figure 7).
In real life, these character classes are required for creating a password.
Creation of password gates: Once the player collects the artifacts, stores them using secure password gates (cf. Figure 4), they complete one full day in the game.
We introduced two activities post each password creation stage that act as distraction tasks.
Distraction tasks [31] distract the players for a brief period after password entry, to encourage them to create memorable passwords.
Our tasks are two mini activities that ask the players to arrange certain items correctly (using drag and drop) to a) Ignite a campfire b) Cook food (cf. Figure 8).
This step is added to promote awareness about the importance of creating memorable passwords.
To continue the journey further on the next day, the player has to unlock the gate using the same password (cf. Figure 4).
This password recall stage is where password memorability is tested.
If players fail a level, it can be replayed again.
The game did not have timers as these might have created unwanted sense of urgency that could have limited gameplay experience [43].
Passworld used simple controls with arrow keys for navigation, jumping, and mouse clicks for selections.
The game implements the use of feedback and instructions to promote learning throughout.
The feedback methodology was added to promote selflearning and reflection [15].
The game implements the following methods to promote learning.
The oncoming animals provide instructions on various heuristics to the players.
We added different animals to provide a visual identity to each heuristic, to make it more memorable.
The same heuristic information is also available during password creation stages to help users learn the password creation strategies.
Therefore, players who feel reading the information during gameplay is disruptive can read it at a further time, while creating the password.
The heuristics are taught one at a time, but at the end of the level, the created password should incorporate all these heuristics.
Even though a strong password does not need all these heuristics to be satisfied [48], we did this in order to teach and make the users understand that every heuristic is important.Feedback: As soon as the player enters a password during the password creation stage, immediate feedback is received, indicating to them the potential vulnerabilities within the password entered.
The study on adaptive password blacklisting policies [38] introduces an interface to provide the users with suggestions on modifying passwords to conform to the policies.
We used our study to make this process voluntary.
We did not provide suggestions to the users, but only feedback on if they satisfied certain password heuristics or not.
Data captured and stored in the form of game data included the demographic information, pre-test, post-test, and feedback survey responses, various time stamps, gameplay [38] is an ordered sequence that captures the password's composition using four character classes.
These classes are L, U, D, and S, for lowercase and uppercase characters, digits, and symbols respectively.
For example, a password like "P@ssw0rd" will only be stored as "USLLLDLL" instead of its plain text for analysis.
The game trains in a set of 16 password heuristics, with each heuristic being tagged to a particular animal (as shown in Table 1).
A previous study by Ur, et al. [48] found them to be effective in increasing password strength.
These password heuristics, categorized as two sets based on increasing complexity, were added to the two game levels.
The first level has basic password requirements like length (H1), presence of character classes (H2-H5), alphabetic sequences (H9) etc. of which, H1-H5 were part of our organization's default password policies.
The second level focuses on the heuristics from the first level along with new heuristics that check formatting, repeated sections in passwords, date formats etc.
A set of common words related to the organization (classified as "blacklisted" passwords) were added as a check as well.
We also compared user created password structures with over 2,124 structures obtained from the previous study [48] should not be present (US-English language keyboards).
Date formats DDMMYY -with and without delimiters and years , in all formats including month names should not be present.
The game checks users' passwords through the following steps:a.
As soon as a player uses the resources (L, U, D, and S) to form a password gate, default checks for length and presence of all character classes are done.
If any of them is not satisfied, the game shows appropriate error messages to the player instantly.b.
Once the password satisfies the basic criteria, the password heuristics evaluation begins.c.
For each heuristic, an animal approaches the gate (cf. Figure 5).
If the corresponding heuristic is satisfied, the animal leaves (cf. Figure 6); else, it attacks the gate and enters the camp resulting in a penalty as loss of life.
This process repeats until all level heuristics are satisfied (level cleared) or when all life is lost (level failed).
After this, the player continues to the next level or goes back to the start of the level respectively.
The goals of our study were to find the effectiveness of a game-based enterprise password awareness training on various password heuristics, and to identify if such a training could be beneficial to enterprise password diversity.
Previous studies [8,41] show that game-based methods have shown better results than text-based means, when it comes to cybersecurity training.
We utilized this result to test if games could help in password awareness training, and we measured this using pre and post-tests along with the game.
The following sections show our study procedure and evaluation results.
Game participants were employees of our organization.
They were recruited for the study using mailers about the game.
Interested participants clicked on the game URL within the mail to access the game.
Though equipped with computer knowledge, the participants had varied understanding of gaming and password awareness.Passworld was online for one month and was played by 4,906 participants from around the globe.
We selected a set of lucky winners from the participants who completed the game (20 people per day), and rewarded each of them using our organization's equivalent of virtual currency (with a monetary value of approximately $4).
Table 2 shows the demographics data collected from the participants.
We organized the study as a three-step methodology.Initially the participants had to answer a pre-test (step 1).
This was followed by the actual gameplay (step 2) and then the post-test (step 3).
The participants accessed the game using their respective devices and those participants who completed all the game levels from beginning to end were included in our evaluation.
Only the first successful attempt of completion was used in our data analysis, even though many participants returned to play the game more than once.
We measured the attempt count by tracking the "participant id" of participants, which was assigned based on their hashed email addresses.
Evaluation on users' password knowledge improvement was done by analyzing their responses to the pre-and post-tests, and the password Each test question covered a password heuristic.
The preand post-test questions followed a similar format asking players to select the relatively weaker password between two given choices.
We created the password choices by picking suitable passwords from leaked databases [1,58] and minimally modifying them to be able to test a particular heuristic, similar to the method followed in [50].
For example, to test H13 (predictable position of uppercase character) we chose the password "brooklyn" from the leaked database [58], and created the password pair comprising of "Brooklyn" and "brooklYn", of which the former is weaker as the uppercase character is at a very predictable position.
This method was extended to the password pairs of other questions as well.
Participants were also asked to provide their confidence ratings for every answer.
The survey questions are provided as appendix.
We evaluated the impact of our game-based training on users' password creation strategies.
We were also interested in the changes in users' knowledge levels when it came to password practices by measuring correct answers given for pre and post-tests.
We tried to answer our initial research questions through the study.
We measured the effects of the game by analyzing the improvement in correct answers and confidence levels of the participants.
The results are detailed in the following sections.
We analyzed the participants' pre and post-level test responses.
The test questions prompted users to choose the weaker between two given passwords.
Passwords were shown such that the pairs focused on one heuristic each, and the password with the absence of that particular heuristic was considered weaker in that pair.The results show that more participants were able to provide correct answers to test questions after playing the game compared to before.
There are however, exceptions for heuristics H6, H10, H13.
The plots (cf. Figures 9, 10) show the participants' performance based on password heuristics in both the levels.
H6 had a reduction of 12.45%, H10 had 13.78%, and H13 had 18.62% reduction in correct answers in post-level tests compared to pre-level tests.
While we are unable to determine the cause for reduction in H6 now, the reduction in H10 could be attributed to the large possible combination of patterns possible.The variety of keyboard patterns might turn out to be difficult for users to remember, which could mean that active feedback during password entry might be better for such heuristics.
The predictable positions of uppercase characters (H13) had a decrease probably because the game time was not sufficient in unlearning the common practices of adding uppercase letters at the beginning or end.
This may require multiple training sessions to unlearn.
The users did show improvements in Level 2 while entering passwords by avoiding uppercase characters at the beginning.
Questions on H1-H5 were not asked during the tests as these belonged to basic password requirements of our organization that the employees were aware of.
Combining both levels, we asked the players 24 questions, 12 each in pre and post-level tests.
The average number of correct answers increased from 5.96 (pre-test, SD=2.3) to 6.57 (post-test, SD=2.69).
A statistically significant difference was observed with respect to the correct answers given by participants in the tests before and after the game (two-tailed paired t-test, t(4905) = -19.35, p < .001).
Questions on H14 (predictable structures) were not asked separately in pre and post-tests as these would also fall under other heuristics.
H14 was tested during password creation level; however, the passwords that satisfied the heuristics H1-H13 also satisfied H14.
Averaging correct answer percentages of certain clusters (for both tests), we found an 8.32% increase in C2, 12.28% increase in C3, and 4.9% decrease in C4 (cf. Figure 11), showing that patterns (especially keyboard patterns) is where participants need to gain more knowledge on.
The previous study on GAP game [47] that tested password practices, similar to heuristics H11, H12, and H13, had shown better results with an average of 80.17%, 78.45%, and 87.93% participants correctly identifying password practices, H11, H12, and H13 respectively.
Our game had a larger set of heuristics, with Level 1 requiring users to check ten heuristics and Level 2 having an additional six heuristics apart from Level 1 heuristics.
This might have caused an overload of learning content in one go, as participants have shown better results for H13 in GAP [47] compared to Passworld.
This could also show that while learning these heuristics is important, the manner to train users in them could be gradual.
The users could be trained in an initial set of heuristics at first, and afterwards, the next set of training could be undergone.
Figure 14).
Among the participants, the age group 21-30, and Bachelor's Degree holders showed a consistent increase in almost all heuristics.
People with non-IT background (H9: 20% increase, H11: 104%) showed more improvements than the participants with IT background (H9: 5% increase, H11: 96%).
H8 has better improvements in all demographics (with highest for Master's degree holders, 373% from pre to post).
We also conducted a comparative study on gender differences vs. password practices.
Petrie, et Al [36], also suggested a similar study.
From our analysis, it was found that women did a better job of recalling created passwords, with 78.05% (Level 1) and 86.06% (Level 2) recalls matching their created passwords compared to men with 72.65% (Level 1) and 81.98% (Level 2).
This supports the behavior reported in the study [36] where men expressed greater difficulty in remembering passwords.
Often, participants took several attempts before creating a password that satisfied each Level's heuristics.
Counting all such attempts, for H1-H9 and H16, we calculated the overall number of times the participants failed for each heuristic before satisfying them.
These heuristics appear in both levels 1 and 2.
From Figure 15, we can see that the total number of failed attempts for each heuristic has come down drastically from Level 1(M= 283) to Level 2 (M= 106).
We can infer that once participants gained sufficient knowledge through game-play on various common password practices, they incorporated these learnings during password creation, thereby satisfying the heuristic checks.
The number of failed attempts for blacklisted passwords decreased from 845 in Level 1 to 195 in Level 2 (~77% reduction), showing improvement.
Alphabetical sequences (H9) however, showed a slight increase in failure rates.
This could be attributed to the fact that there are a large number of possible sequences to avoid, and the participants were having difficulty in identifying them.
From the user responses, we found changes in password distribution when more heuristics were satisfied.
We analyzed this using password structures.
An interesting observation was about the use of common password structures.
In the password creation stages, several participants followed similar structures while creating passwords (Table 3, Column 1).
This shows that most of the players' ideas on secure passwords might end up being wrong, as shown in a previous study [49].
Comparing the top 10 most popular password structures from Level 1 and Level 2, we were able to identify a major change in the number of occurrences of similar structures.
Table 3 shows the comparison, where structures with common patterns (ULLLLSDDDD, for instance could be Abcde@1234) have shown drastic decrease in the number of occurrences.
Level 2 structures are more spread out and with different password patterns, which suggest that participants created diverse passwords while satisfying more heuristics.
It also brought down many common password structures, like those with common numerical sequences DDDD (e.g. 1234), uppercase characters (U) only in the beginning, etc.
In Level 1, majority of the passwords start with an uppercase character, and the character does not appear anywhere else in the password.
The game teaches this practice to be less secure, as one of the heuristics (H13) pointed out that use of uppercase in the beginning is a common practice.
In the process of trying to satisfy more password heuristics into their structures, this trend was reduced.
From the participant data, we found that the participants created 17,319 passwords that fell in 11,286 different structures.
Considering only the password structures that satisfied the heuristics (4,906 in each level), there were 3,595 and 4,451 different structures respectively in Level 1 and Level 2.
Furthermore, 3,246 (66.16%) and 4,182 (85.24%) password structures were unique in Level 1 and Level 2 respectively, having only one occurrence.
This trend showed that when more heuristics were to be satisfied in passwords, enterprise users could create passwords that were more diverse.
For the password recall stage, data shows that 55.54% players matched the passwords in their first attempt for Level 1 and it increased to 71.70% for Level 2.
Considering the players who recalled their passwords, in multiple attempts, the numbers come to 3,700 (75.41%) for Level 1 and 4,122 (84.01%) for Level 2.
The participants who successfully recalled passwords for both levels comes to 3247(66.18%).
Overall, 6,814 participants showed interest in playing the game, of which, 4,906 completed it.
A decrease of 28% Level 1 Level 2ULLLLSDDDD (84) LSLLLDLU (52) ULLLSDDDD (64) LSLLLDLLU (20) ULLSDDDD (56) LLLUSDLLL (10) ULLLLLSDDDD (52) ULLSULDDLL (8) ULLLLLSDD (46) LLLUSDDDUU (8) LSLLLDLU (45) UUUUSDDLL (6) ULLLSDDD (44) USLSUDLU (6) ULLLLLLSDD (39) SLLDLLLU (6) ULLLLSDD (37) LULLLSULLDDDL (5) ULLLLSDDD (35) ULSULDDDDL (5) could be because of network and proxy issues in certain locations, as noted from the participant feedback comments.
Among the 4,906 participants, we calculated the player involvement by measuring number of resources and artifacts collected per level by the players (Table 4).
The data shows that majority of players have had an immersive gameplay, with increasing number of collected artifacts and resources nearing the total number available.
Here L, U, D, S correspond to character classes and A denotes the artifact collected.
The general feedback by participants included comments like "informative and interesting", "Excellent game to deliver the message on the usage of strong passwords", "Fun and creative game.
Nice idea."
etc.
While some participants requested for the game to be available as a permanent training method, some participants found the game time of over 15 minutes to be a bit longer.
At the end of the post-test, we asked the participants to rate Passworld on a 5-point Likert scale [22] with respect to fun, education, and learning.
As per the feedback data (cf. Figure 16), 93.50% participants agreed the game to be fun (M = 4.42, SD = 0.69), 93.85% (M= 4.42, SD= 0.68) found the game to be educational and 94.24% (M= 4.48, SD = 0.68) considered they have learned about secure password practices.
The Passworld game was successfully completed by 4,906 employees in our organization.
The analysis of their gameplay data found the game to be effective and engaging.
It also helped us find various insights on enterprise users' password practices.
The insights are as follows.a) Participants showed improvements in creating passwords that satisfied various heuristics like avoiding date formats, predictable positions of symbols and digits, character duplicates to name a few.
Their new passwords satisfied more number of heuristics after users played the game levels, compared to before.b) Prior to satisfying all game heuristics, participants created similar password structures, as seen from Column 1 of Table 3.
After satisfying more heuristics, the participants were able to create more diverse passwords.
Over 90% of passwords created after satisfying all the game heuristics resulted in unique password structures.
This trend, when followed outside the game, would result in password diversity across organization.c) It is to be noted that the diversity in user-created password structures post gameplay is not brought about by providing suggestions on modifications to the entered password, unlike in the previous study [38].
More likely, the users applied their learnings obtained from the game to satisfy more heuristics in their passwords.
This resulted in more password diversity.d) Comparing with the previous game GAP [47] which showed good results with a small set of heuristics, we found that certain heuristics like repeated characters (H6), keyboard patterns (H10), and predictable uppercase characters (H13) showed decrease in performance after game-play.
H10 can be considered as a complex heuristic with several possible patterns that the user has to know of.
H13 is such that addition of uppercase characters at the beginning of a password is a very common practice that might need multiple trainings to unlearn.
This could suggest that these heuristics might either need a more in-depth training or an active feedback while passwords are being entered in real time.
The results could also mean that training on a very large set of heuristics might have caused a learning overload that might have resulted in decrease in results in Level 2.
This could be avoided by providing a gradual training on heuristics.e) Considering the heuristic clusters, C4 had a decrease of around 5% showing that "identifying patterns" is where the participants struggled the most.
Real-time suggestion to avoid keyboard patterns during password entry could be a method to reduce the users from including patterns into their passwords.
Sixteenth Symposium on Usable Privacy and Security 11 f) We received certain insights on changes to gameplay that include reducing the overall game length, reducing the time needed for animals to attack the gate, and distribution of heuristics into various levels.
Our study has a certain number of limitations that have to be considered while analyzing the results.
The participant demographics selected for the game included employees of our organization, who may know basics of cybersecurity or password practices.
The game data of 4,906 participants shows positive responses in understanding password heuristics and creation strategies.
However, to test the effectiveness of the game in a real-world scenario, we will have to monitor individual password practices throughout the organization to start with.
This process could violate the privacy of individuals, and therefore has not been attempted by us.
The results of a previous research [28] shows that the positive results of a smaller lab experiment were carried forward to a larger audience.
We hope that our experimental results show a similar trend.
Similarly, the passwords entered by the users within the game were most likely not their real passwords used in any accounts.
While a research study [16] suggests that the passwords implemented by users in a study could resemble real life passwords, the extent to which our participants would utilize similar passwords in both game and real life needs to be studied.
An alternate form of experiment, e.g. a textbased condition or another control condition, has not been tested.
While the study makes no claims of being better than a controlled experiment, our training shows that a fun oriented gameplay can help teach password heuristics to users.
More studies need to be conducted in order to obtain conclusive evidence on the effectiveness of a game as a medium to train enterprise users on password awareness.The game makes no claims about making all the user passwords memorable.
It attempts to improve the understanding of people in creating stronger passwords than what they used to create prior to the game.
While we observed reasonable password recall rates in our study, we do not have conclusive evidence on password memorability over long periods.Passworld tries to offer a starting point in the area of gamebased password security education.
A previous research study [39] show that user behavior related to password usage can be influenced with positive reinforcement.
The results of our study suggest that game-based training could also influence users' behaviors related to passwords.
A solid understanding on password practices coupled with the use of a password meter could provide better security in terms of password strength.
The Passworld game was designed to provide awareness on various password heuristics to enterprise users.
The main objectives of our study were to find 1) if a gamebased training could teach users on password heuristics 2) if such a training on heuristics could improve organizational password diversity.
We used the password heuristics from a previous study [48] for teaching, and we checked if the users satisfied every one of these heuristics during their password creation.
Our intention was different from the previous study [48], where satisfying all the heuristics was not mandatory.
We intended to teach the users about the importance of each heuristic, and wanted to see how many users successfully implemented what they learnt.
We presented the results from our enterprise study with 4,906 participants.
Even though our study was a standalone study, without a control condition, we found that after playing the game, the correctness and confidence levels of the participants have increased.
The password structures created by the participants have shown more diversity post gameplay.
This, along with the positive feedback, shows that the gameplay has helped the participants learn the concepts to implement diverse and memorable passwords.
We believe that this trend, when followed in real life, would result in organizational password diversity.We recommend the launch of such training methods in an organizational environment to ensure that users learn about password heuristics and incorporate them while creating passwords to promote diversity in password structures.
This could be a deciding factor when it comes to organizational password security.Recommendations for further study follow.
First, the study could be carried out on a set of wider demographics, with different levels of understanding of security concepts and learning backgrounds.
To reduce the information overload, we propose a gradual learning with one set of heuristics, followed by another set.
Training on patterns (like alphabetic sequences, keyboard patterns etc.) could be done separately to lay emphasis on it.
A methodology to evaluate users' password memorability over long periods could also be beneficial in proposing further learning goals.
We aim to explore further areas of password and cybersecurity education through interactive gameplay experiences.
"Paswwoorsdd", which had a maximum of two repeated characters.
The latter satisfied the requirements for the heuristic H6.
In this pair, the former is considered the weaker password.
Similarly, we chose other leaked passwords and incorporated the same methodology to create a list of password pairs for use in the pre-and post-tests.
The passwords given as choices were judged based on the particular heuristic being dominant.
For example, considering passwords "asdfghjkl" and "afhsgdljk", despite having similar characteristics, the former is a very common keyboard pattern and the latter is not.
This puts the former in "common passwords" criteria, making it weaker.
Both the options provided were of equal length and had similar characteristics like order of character classes etc., except the heuristic being checked.
Presence of multiple heuristics within a password would have caused ambiguity to the participants.
Apart from judging based on heuristics, we also analyzed the password strengths using several available tools to ensure that our choice of answers are true to the maximum extend.
Following online services were used to rate the passwords before being added to the pre and post-tests: Please answer all these questions:1)The game was fun In the game, the participants have created passwords that satisfy all the game heuristics in Level 2.
These can be considered as passwords with lesser vulnerabilities.
The game teaches password heuristics using oncoming animals, who provide heuristic-related information to the players, at the same time, check if heuristics are satisfied during password creation.
Given below are the various animals that come into play.
Their corresponding heuristics are mentioned in Table 1.
s A. Demographics SurveyWe conducted an initial demographic survey of our participants.
The questions asked are as follows: B. Game TestsThe questions asked during the pre-and post-tests were focused on the heuristics being taught in the game.
Every question contained two password choices, with one satisfying the particular heuristic, while the other failed to do so.
We created the password choices by picking suitable passwords from leaked databases [1,58] and minimally modifying them to be able to test a particular heuristic (similar to the method followed in [50]).
For example, we chose a leaked password "Password", (leaked 130,999 times as per [58]), and incorporated repeated characters (H6) by adding four consecutive "s" to create "Passsssword".
This password did not satisfy H6.
The corresponding alternate choice for this password was We conducted an initial demographic survey of our participants.
The questions asked are as follows: The questions asked during the pre-and post-tests were focused on the heuristics being taught in the game.
Every question contained two password choices, with one satisfying the particular heuristic, while the other failed to do so.
We created the password choices by picking suitable passwords from leaked databases [1,58] and minimally modifying them to be able to test a particular heuristic (similar to the method followed in [50]).
For example, we chose a leaked password "Password", (leaked 130,999 times as per [58]), and incorporated repeated characters (H6) by adding four consecutive "s" to create "Passsssword".
This password did not satisfy H6.
The corresponding alternate choice for this password was
